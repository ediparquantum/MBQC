<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_probabilities_amplitudes_no_noise_circuits_8hpp" xml:lang="en-US">
<title>src/testFunctions/probabilitiesAmplitudesNoNoiseCircuits.hpp File Reference</title>
<indexterm><primary>src/testFunctions/probabilitiesAmplitudesNoNoiseCircuits.hpp</primary></indexterm>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_probabilities_amplitudes_no_noise_circuits_8hpp_1a04cb99395192eeaaf6127a5566a1f0f2">applySingleQubitPauliX</link> (std::string fileAmp, std::string fileProb)</para>
</listitem>
            <listitem><para>void <link linkend="_probabilities_amplitudes_no_noise_circuits_8hpp_1abcf93bff15914fce42420a9c180cb52b">applySingleQubitHGate</link> (std::string fileAmp, std::string fileProb)</para>
</listitem>
            <listitem><para>void <link linkend="_probabilities_amplitudes_no_noise_circuits_8hpp_1a0a4ae0264fe447986b9ec9020be0b300">applyTwoQubitPauliXEachQubit</link> (std::string fileAmp, std::string fileProb)</para>
</listitem>
            <listitem><para>void <link linkend="_probabilities_amplitudes_no_noise_circuits_8hpp_1a83516056319fc01a2e77d10e1207db1b">applyTwoQubitHGateEachQubit</link> (std::string fileAmp, std::string fileProb)</para>
</listitem>
            <listitem><para>void <link linkend="_probabilities_amplitudes_no_noise_circuits_8hpp_1a29e290b1295a652cd32caa8b1b9fadc1">applyTwoQubitHCZGateBetweenQubit</link> (std::string fileAmp, std::string fileProb)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_probabilities_amplitudes_no_noise_circuits_8hpp_1abcf93bff15914fce42420a9c180cb52b"/><section>
    <title>applySingleQubitHGate()</title>
<indexterm><primary>applySingleQubitHGate</primary><secondary>probabilitiesAmplitudesNoNoiseCircuits.hpp</secondary></indexterm>
<indexterm><primary>probabilitiesAmplitudesNoNoiseCircuits.hpp</primary><secondary>applySingleQubitHGate</secondary></indexterm>
<para><computeroutput>void applySingleQubitHGate (std::string fileAmp, std::string fileProb)</computeroutput></para>
<para>Apply single-qubit Hadamard gate to the quantum state without any damping noise.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>fileAmp</entry><entry>
<para>The file to write the amplitudes of the quantum state. </para>
</entry>
                            </row>
                            <row>
<entry>fileProb</entry><entry>
<para>The file to write the probabilities of the quantum state. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_probabilities_amplitudes_no_noise_circuits_8hpp_source_1l00058">58</link> of file <link linkend="_probabilities_amplitudes_no_noise_circuits_8hpp_source">probabilitiesAmplitudesNoNoiseCircuits.hpp</link>.</para>
<programlisting linenumbering="unnumbered">00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;numQubits&#32;=&#32;1;
00060 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;load&#32;QuEST&#32;environment</emphasis>
00061 &#32;&#32;&#32;&#32;QuESTEnv&#32;env&#32;=&#32;createQuESTEnv();
00062 &#32;&#32;&#32;&#32;
00063 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Create&#32;qureg</emphasis>
00064 &#32;&#32;&#32;&#32;Qureg&#32;qureg&#32;=&#32;createDensityQureg(numQubits,&#32;env);
00065 &#32;&#32;&#32;&#32;
00066 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Apply&#32;details&#32;to&#32;circuit</emphasis>
00067 &#32;&#32;&#32;&#32;hadamard(qureg,0);
00068 &#32;&#32;&#32;&#32;
00069 &#32;&#32;&#32;&#32;
00070 &#32;&#32;&#32;&#32;<link linkend="_general_helper_functions_8hpp_1a7465cffdfd3bf3b9d59175e8194b4588">writeStateToFile</link>(qureg,fileAmp);
00071 
00072 
00073 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Compute&#32;probabilites</emphasis>
00074 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;numProbs&#32;=&#32;1&lt;&lt;numQubits;
00075 &#32;&#32;&#32;&#32;qreal&#32;outcomeProbs[1&lt;&lt;numProbs];
00076 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;qubits[]&#32;=&#32;{0};
00077 &#32;&#32;&#32;&#32;calcProbOfAllOutcomes(outcomeProbs,qureg,qubits,numQubits);&#32;&#32;&#32;&#32;&#32;
00078 &#32;&#32;&#32;&#32;
00079 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Write&#32;probabilities&#32;to&#32;file</emphasis>
00080 &#32;&#32;&#32;&#32;
00081 &#32;&#32;&#32;&#32;std::string&#32;col_name&#32;=&#32;<emphasis role="stringliteral">&quot;probabilities&quot;</emphasis>;
00082 &#32;&#32;&#32;&#32;<link linkend="_general_helper_functions_8hpp_1a41a7ac4a876af2866b1d6ab915ecdfb2">writeArrayToFile</link>(outcomeProbs,&#32;numProbs,&#32;fileProb,col_name);
00083 
00084 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;unload&#32;QuEST</emphasis>
00085 &#32;&#32;&#32;&#32;destroyQureg(qureg,&#32;env);&#32;
00086 &#32;&#32;&#32;&#32;destroyQuESTEnv(env);
00087 }
</programlisting></section>
<anchor xml:id="_probabilities_amplitudes_no_noise_circuits_8hpp_1a04cb99395192eeaaf6127a5566a1f0f2"/><section>
    <title>applySingleQubitPauliX()</title>
<indexterm><primary>applySingleQubitPauliX</primary><secondary>probabilitiesAmplitudesNoNoiseCircuits.hpp</secondary></indexterm>
<indexterm><primary>probabilitiesAmplitudesNoNoiseCircuits.hpp</primary><secondary>applySingleQubitPauliX</secondary></indexterm>
<para><computeroutput>void applySingleQubitPauliX (std::string fileAmp, std::string fileProb)</computeroutput></para>
<para>Apply single-qubit Pauli-X gate to the quantum state without any damping noise.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>fileAmp</entry><entry>
<para>The file to write the amplitudes of the quantum state. </para>
</entry>
                            </row>
                            <row>
<entry>fileProb</entry><entry>
<para>The file to write the probabilities of the quantum state. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_probabilities_amplitudes_no_noise_circuits_8hpp_source_1l00017">17</link> of file <link linkend="_probabilities_amplitudes_no_noise_circuits_8hpp_source">probabilitiesAmplitudesNoNoiseCircuits.hpp</link>.</para>
<programlisting linenumbering="unnumbered">00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00018 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;numQubits&#32;=&#32;1;
00019 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;load&#32;QuEST&#32;environment</emphasis>
00020 &#32;&#32;&#32;&#32;QuESTEnv&#32;env&#32;=&#32;createQuESTEnv();
00021 &#32;&#32;&#32;&#32;
00022 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Create&#32;qureg</emphasis>
00023 &#32;&#32;&#32;&#32;Qureg&#32;qureg&#32;=&#32;createDensityQureg(numQubits,&#32;env);
00024 &#32;&#32;&#32;&#32;
00025 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Apply&#32;details&#32;to&#32;circuit</emphasis>
00026 &#32;&#32;&#32;&#32;pauliX(qureg,0);
00027 &#32;&#32;&#32;&#32;
00028 &#32;&#32;&#32;&#32;
00029 &#32;&#32;&#32;&#32;<link linkend="_general_helper_functions_8hpp_1a7465cffdfd3bf3b9d59175e8194b4588">writeStateToFile</link>(qureg,fileAmp);
00030 
00031 
00032 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Compute&#32;probabilites</emphasis>
00033 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;numProbs&#32;=&#32;1&lt;&lt;numQubits;
00034 &#32;&#32;&#32;&#32;qreal&#32;outcomeProbs[1&lt;&lt;numProbs];
00035 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;qubits[]&#32;=&#32;{0};
00036 &#32;&#32;&#32;&#32;calcProbOfAllOutcomes(outcomeProbs,qureg,qubits,numQubits);&#32;&#32;&#32;&#32;&#32;
00037 &#32;&#32;&#32;&#32;
00038 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Write&#32;probabilities&#32;to&#32;file</emphasis>
00039 &#32;&#32;&#32;&#32;
00040 &#32;&#32;&#32;&#32;std::string&#32;col_name&#32;=&#32;<emphasis role="stringliteral">&quot;probabilities&quot;</emphasis>;
00041 &#32;&#32;&#32;&#32;<link linkend="_general_helper_functions_8hpp_1a41a7ac4a876af2866b1d6ab915ecdfb2">writeArrayToFile</link>(outcomeProbs,&#32;numProbs,&#32;fileProb,col_name);
00042 
00043 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;unload&#32;QuEST</emphasis>
00044 &#32;&#32;&#32;&#32;destroyQureg(qureg,&#32;env);&#32;
00045 &#32;&#32;&#32;&#32;destroyQuESTEnv(env);
00046 }
</programlisting></section>
<anchor xml:id="_probabilities_amplitudes_no_noise_circuits_8hpp_1a29e290b1295a652cd32caa8b1b9fadc1"/><section>
    <title>applyTwoQubitHCZGateBetweenQubit()</title>
<indexterm><primary>applyTwoQubitHCZGateBetweenQubit</primary><secondary>probabilitiesAmplitudesNoNoiseCircuits.hpp</secondary></indexterm>
<indexterm><primary>probabilitiesAmplitudesNoNoiseCircuits.hpp</primary><secondary>applyTwoQubitHCZGateBetweenQubit</secondary></indexterm>
<para><computeroutput>void applyTwoQubitHCZGateBetweenQubit (std::string fileAmp, std::string fileProb)</computeroutput></para>
<para>Apply Hadamard gate to each qubit of a two-qubit system, and a controlled phase flip gate between the qubits, without any damping noise.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>fileAmp</entry><entry>
<para>The file to write the amplitudes of the quantum state. </para>
</entry>
                            </row>
                            <row>
<entry>fileProb</entry><entry>
<para>The file to write the probabilities of the quantum state. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_probabilities_amplitudes_no_noise_circuits_8hpp_source_1l00177">177</link> of file <link linkend="_probabilities_amplitudes_no_noise_circuits_8hpp_source">probabilitiesAmplitudesNoNoiseCircuits.hpp</link>.</para>
<programlisting linenumbering="unnumbered">00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;numQubits&#32;=&#32;2;
00179 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;load&#32;QuEST&#32;environment</emphasis>
00180 &#32;&#32;&#32;&#32;QuESTEnv&#32;env&#32;=&#32;createQuESTEnv();
00181 &#32;&#32;&#32;&#32;
00182 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Create&#32;qureg</emphasis>
00183 &#32;&#32;&#32;&#32;Qureg&#32;qureg&#32;=&#32;createDensityQureg(numQubits,&#32;env);
00184 
00185 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Apply&#32;elements&#32;to&#32;circuit</emphasis>
00186 &#32;&#32;&#32;&#32;hadamard(qureg,0);
00187 &#32;&#32;&#32;&#32;hadamard(qureg,1);
00188 &#32;&#32;&#32;&#32;controlledPhaseFlip(qureg,0,1);
00189 &#32;&#32;&#32;&#32;
00190 &#32;&#32;&#32;&#32;
00191 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Write&#32;amplitudes&#32;to&#32;file</emphasis>
00192 &#32;&#32;&#32;&#32;<link linkend="_general_helper_functions_8hpp_1a7465cffdfd3bf3b9d59175e8194b4588">writeStateToFile</link>(qureg,fileAmp);
00193 
00194 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Compute&#32;probabilities</emphasis>
00195 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;numProbs&#32;=&#32;1&lt;&lt;numQubits;
00196 &#32;&#32;&#32;&#32;qreal&#32;outcomeProbs[numProbs];
00197 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;qubits[]&#32;=&#32;{0,1};
00198 &#32;&#32;&#32;&#32;calcProbOfAllOutcomes(outcomeProbs,qureg,qubits,numQubits);&#32;&#32;&#32;&#32;&#32;
00199 &#32;&#32;&#32;&#32;
00200 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Write&#32;probabilities&#32;to&#32;file</emphasis>
00201 &#32;&#32;&#32;&#32;std::string&#32;col_name&#32;=&#32;<emphasis role="stringliteral">&quot;probabilities&quot;</emphasis>;
00202 &#32;&#32;&#32;&#32;<link linkend="_general_helper_functions_8hpp_1a41a7ac4a876af2866b1d6ab915ecdfb2">writeArrayToFile</link>(outcomeProbs,&#32;numProbs,&#32;fileProb,col_name);
00203 
00204 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;unload&#32;QuEST</emphasis>
00205 &#32;&#32;&#32;&#32;destroyQureg(qureg,&#32;env);&#32;
00206 &#32;&#32;&#32;&#32;destroyQuESTEnv(env);
00207 }
</programlisting></section>
<anchor xml:id="_probabilities_amplitudes_no_noise_circuits_8hpp_1a83516056319fc01a2e77d10e1207db1b"/><section>
    <title>applyTwoQubitHGateEachQubit()</title>
<indexterm><primary>applyTwoQubitHGateEachQubit</primary><secondary>probabilitiesAmplitudesNoNoiseCircuits.hpp</secondary></indexterm>
<indexterm><primary>probabilitiesAmplitudesNoNoiseCircuits.hpp</primary><secondary>applyTwoQubitHGateEachQubit</secondary></indexterm>
<para><computeroutput>void applyTwoQubitHGateEachQubit (std::string fileAmp, std::string fileProb)</computeroutput></para>
<para>Apply Hadamard gate to each qubit of a two-qubit system without any damping noise.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>fileAmp</entry><entry>
<para>The file to write the amplitudes of the quantum state. </para>
</entry>
                            </row>
                            <row>
<entry>fileProb</entry><entry>
<para>The file to write the probabilities of the quantum state. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_probabilities_amplitudes_no_noise_circuits_8hpp_source_1l00137">137</link> of file <link linkend="_probabilities_amplitudes_no_noise_circuits_8hpp_source">probabilitiesAmplitudesNoNoiseCircuits.hpp</link>.</para>
<programlisting linenumbering="unnumbered">00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00138 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;numQubits&#32;=&#32;2;
00139 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;load&#32;QuEST&#32;environment</emphasis>
00140 &#32;&#32;&#32;&#32;QuESTEnv&#32;env&#32;=&#32;createQuESTEnv();
00141 &#32;&#32;&#32;&#32;
00142 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Create&#32;qureg</emphasis>
00143 &#32;&#32;&#32;&#32;Qureg&#32;qureg&#32;=&#32;createDensityQureg(numQubits,&#32;env);
00144 &#32;&#32;&#32;&#32;
00145 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Apply&#32;details&#32;to&#32;circuit</emphasis>
00146 &#32;&#32;&#32;&#32;hadamard(qureg,0);
00147 &#32;&#32;&#32;&#32;hadamard(qureg,1);
00148 &#32;&#32;&#32;&#32;
00149 &#32;&#32;&#32;&#32;
00150 &#32;&#32;&#32;&#32;<link linkend="_general_helper_functions_8hpp_1a7465cffdfd3bf3b9d59175e8194b4588">writeStateToFile</link>(qureg,fileAmp);
00151 
00152 
00153 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Compute&#32;probabilites</emphasis>
00154 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;numProbs&#32;=&#32;1&lt;&lt;numQubits;
00155 &#32;&#32;&#32;&#32;qreal&#32;outcomeProbs[1&lt;&lt;numProbs];
00156 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;qubits[]&#32;=&#32;{0,1};
00157 &#32;&#32;&#32;&#32;calcProbOfAllOutcomes(outcomeProbs,qureg,qubits,numQubits);&#32;&#32;&#32;&#32;&#32;
00158 &#32;&#32;&#32;&#32;
00159 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Write&#32;probabilities&#32;to&#32;file</emphasis>
00160 &#32;&#32;&#32;&#32;
00161 &#32;&#32;&#32;&#32;std::string&#32;col_name&#32;=&#32;<emphasis role="stringliteral">&quot;probabilities&quot;</emphasis>;
00162 &#32;&#32;&#32;&#32;<link linkend="_general_helper_functions_8hpp_1a41a7ac4a876af2866b1d6ab915ecdfb2">writeArrayToFile</link>(outcomeProbs,&#32;numProbs,&#32;fileProb,col_name);
00163 
00164 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;unload&#32;QuEST</emphasis>
00165 &#32;&#32;&#32;&#32;destroyQureg(qureg,&#32;env);&#32;
00166 &#32;&#32;&#32;&#32;destroyQuESTEnv(env);
00167 }
</programlisting></section>
<anchor xml:id="_probabilities_amplitudes_no_noise_circuits_8hpp_1a0a4ae0264fe447986b9ec9020be0b300"/><section>
    <title>applyTwoQubitPauliXEachQubit()</title>
<indexterm><primary>applyTwoQubitPauliXEachQubit</primary><secondary>probabilitiesAmplitudesNoNoiseCircuits.hpp</secondary></indexterm>
<indexterm><primary>probabilitiesAmplitudesNoNoiseCircuits.hpp</primary><secondary>applyTwoQubitPauliXEachQubit</secondary></indexterm>
<para><computeroutput>void applyTwoQubitPauliXEachQubit (std::string fileAmp, std::string fileProb)</computeroutput></para>
<para>Apply Pauli-X gate to each qubit of a two-qubit system without any damping noise.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>fileAmp</entry><entry>
<para>The file to write the amplitudes of the quantum state. </para>
</entry>
                            </row>
                            <row>
<entry>fileProb</entry><entry>
<para>The file to write the probabilities of the quantum state. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_probabilities_amplitudes_no_noise_circuits_8hpp_source_1l00096">96</link> of file <link linkend="_probabilities_amplitudes_no_noise_circuits_8hpp_source">probabilitiesAmplitudesNoNoiseCircuits.hpp</link>.</para>
<programlisting linenumbering="unnumbered">00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00097 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;numQubits&#32;=&#32;2;
00098 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;load&#32;QuEST&#32;environment</emphasis>
00099 &#32;&#32;&#32;&#32;QuESTEnv&#32;env&#32;=&#32;createQuESTEnv();
00100 &#32;&#32;&#32;&#32;
00101 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Create&#32;qureg</emphasis>
00102 &#32;&#32;&#32;&#32;Qureg&#32;qureg&#32;=&#32;createDensityQureg(numQubits,&#32;env);
00103 &#32;&#32;&#32;&#32;
00104 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Apply&#32;details&#32;to&#32;circuit</emphasis>
00105 &#32;&#32;&#32;&#32;pauliX(qureg,0);
00106 &#32;&#32;&#32;&#32;pauliX(qureg,1);
00107 &#32;&#32;&#32;&#32;
00108 &#32;&#32;&#32;&#32;
00109 &#32;&#32;&#32;&#32;<link linkend="_general_helper_functions_8hpp_1a7465cffdfd3bf3b9d59175e8194b4588">writeStateToFile</link>(qureg,fileAmp);
00110 
00111 
00112 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Compute&#32;probabilites</emphasis>
00113 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;numProbs&#32;=&#32;1&lt;&lt;numQubits;
00114 &#32;&#32;&#32;&#32;qreal&#32;outcomeProbs[1&lt;&lt;numProbs];
00115 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;qubits[]&#32;=&#32;{0,1};
00116 &#32;&#32;&#32;&#32;calcProbOfAllOutcomes(outcomeProbs,qureg,qubits,numQubits);&#32;&#32;&#32;&#32;&#32;
00117 &#32;&#32;&#32;&#32;
00118 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Write&#32;probabilities&#32;to&#32;file</emphasis>
00119 &#32;&#32;&#32;&#32;
00120 &#32;&#32;&#32;&#32;std::string&#32;col_name&#32;=&#32;<emphasis role="stringliteral">&quot;probabilities&quot;</emphasis>;
00121 &#32;&#32;&#32;&#32;<link linkend="_general_helper_functions_8hpp_1a41a7ac4a876af2866b1d6ab915ecdfb2">writeArrayToFile</link>(outcomeProbs,&#32;numProbs,&#32;fileProb,col_name);
00122 
00123 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;unload&#32;QuEST</emphasis>
00124 &#32;&#32;&#32;&#32;destroyQureg(qureg,&#32;env);&#32;
00125 &#32;&#32;&#32;&#32;destroyQuESTEnv(env);
00126 }
</programlisting></section>
</section>
</section>
