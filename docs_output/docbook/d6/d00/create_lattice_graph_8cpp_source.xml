<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_create_lattice_graph_8cpp_source" xml:lang="en-US">
<title>createLatticeGraph.cpp</title>
<indexterm><primary>src/archive/filesToGoThrough/createLatticeGraph.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_create_lattice_graph_8cpp_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&lt;iostream&gt;</emphasis>
<anchor xml:id="_create_lattice_graph_8cpp_source_1l00002"/>00002 <emphasis role="preprocessor">#include&#32;&lt;boost/graph/adjacency_list.hpp&gt;</emphasis>
<anchor xml:id="_create_lattice_graph_8cpp_source_1l00003"/>00003 
<anchor xml:id="_create_lattice_graph_8cpp_source_1l00004"/>00004 <emphasis role="keyword">using&#32;namespace&#32;</emphasis>boost;
<anchor xml:id="_create_lattice_graph_8cpp_source_1l00005"/>00005 
<anchor xml:id="_create_lattice_graph_8cpp_source_1l00006"/><link linkend="_create_lattice_graph_8cpp_1ad531f0530c52e2baed8840517b52b457">00006</link> <emphasis role="keyword">typedef</emphasis>&#32;boost::property&lt;boost::edge_weight_t,&#32;int&gt;&#32;<link linkend="_create_lattice_graph_8cpp_1ad531f0530c52e2baed8840517b52b457">EdgeWeightProperty</link>;
<anchor xml:id="_create_lattice_graph_8cpp_source_1l00007"/><link linkend="_create_lattice_graph_8cpp_1ae727d82d2665e0ccdbb85e29c841ba5f">00007</link> <emphasis role="keyword">typedef</emphasis>&#32;boost::adjacency_list&lt;boost::listS,&#32;boost::vecS,boost::undirectedS,boost::no_property,EdgeWeightProperty&gt;&#32;<link linkend="_create_lattice_graph_8cpp_1ae727d82d2665e0ccdbb85e29c841ba5f">undirectedGraph</link>;
<anchor xml:id="_create_lattice_graph_8cpp_source_1l00008"/><link linkend="_create_lattice_graph_8cpp_1af04c50f717d4bda41f0c58fe0eece059">00008</link> <emphasis role="keyword">typedef</emphasis>&#32;boost::graph_traits&lt;undirectedGraph&gt;::edge_iterator&#32;<link linkend="_create_lattice_graph_8cpp_1af04c50f717d4bda41f0c58fe0eece059">edge_iterator</link>;
<anchor xml:id="_create_lattice_graph_8cpp_source_1l00009"/><link linkend="_create_lattice_graph_8cpp_1a9451df0dac964b257bedb5e60547824e">00009</link> <emphasis role="keyword">typedef</emphasis>&#32;boost::graph_traits&lt;undirectedGraph&gt;::vertex_iterator&#32;<link linkend="_create_lattice_graph_8cpp_1a9451df0dac964b257bedb5e60547824e">vertex_iterator</link>;
<anchor xml:id="_create_lattice_graph_8cpp_source_1l00010"/>00010 &#32;&#32;&#32;&#32;
<anchor xml:id="_create_lattice_graph_8cpp_source_1l00011"/>00011 
<anchor xml:id="_create_lattice_graph_8cpp_source_1l00012"/>00012 
<anchor xml:id="_create_lattice_graph_8cpp_source_1l00013"/><link linkend="_create_lattice_graph_8cpp_1a3cb55165ce6d84dde6bc711a07037ed9">00013</link> <link linkend="_create_graph_8hpp_1adb6c610c60479e8b904f5832786b4125">undirectedGraph</link>&#32;<link linkend="_create_lattice_graph_8cpp_1a3cb55165ce6d84dde6bc711a07037ed9">create_grid_lattice_graph</link>(<emphasis role="keywordtype">int</emphasis>&#32;n,&#32;<emphasis role="keywordtype">int</emphasis>&#32;m)&#32;{&#32;<emphasis role="comment">//&#32;create&#32;a&#32;grid&#32;lattice&#32;graph&#32;with&#32;n&#32;x&#32;m&#32;vertices</emphasis>
<anchor xml:id="_create_lattice_graph_8cpp_source_1l00014"/>00014 &#32;&#32;<link linkend="_create_graph_8hpp_1adb6c610c60479e8b904f5832786b4125">undirectedGraph</link>&#32;g(n&#32;*&#32;m);
<anchor xml:id="_create_lattice_graph_8cpp_source_1l00015"/>00015 
<anchor xml:id="_create_lattice_graph_8cpp_source_1l00016"/>00016 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;n;&#32;i++)&#32;{
<anchor xml:id="_create_lattice_graph_8cpp_source_1l00017"/>00017 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;0;&#32;j&#32;&lt;&#32;m;&#32;j++)&#32;{
<anchor xml:id="_create_lattice_graph_8cpp_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(j&#32;&lt;&#32;m-1)&#32;add_edge(i*m+j,&#32;i*m+j+1,&#32;g);&#32;<emphasis role="comment">//&#32;add&#32;horizontal&#32;edges</emphasis>
<anchor xml:id="_create_lattice_graph_8cpp_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;&lt;&#32;n-1)&#32;add_edge(i*m+j,&#32;(i+1)*m+j,&#32;g);&#32;<emphasis role="comment">//&#32;add&#32;vertical&#32;edges</emphasis>
<anchor xml:id="_create_lattice_graph_8cpp_source_1l00020"/>00020 &#32;&#32;&#32;&#32;}
<anchor xml:id="_create_lattice_graph_8cpp_source_1l00021"/>00021 &#32;&#32;}
<anchor xml:id="_create_lattice_graph_8cpp_source_1l00022"/>00022 
<anchor xml:id="_create_lattice_graph_8cpp_source_1l00023"/>00023 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;g;
<anchor xml:id="_create_lattice_graph_8cpp_source_1l00024"/>00024 }
<anchor xml:id="_create_lattice_graph_8cpp_source_1l00025"/>00025 
<anchor xml:id="_create_lattice_graph_8cpp_source_1l00026"/>00026 
<anchor xml:id="_create_lattice_graph_8cpp_source_1l00027"/>00027 
<anchor xml:id="_create_lattice_graph_8cpp_source_1l00028"/>00028 
<anchor xml:id="_create_lattice_graph_8cpp_source_1l00029"/><link linkend="_create_lattice_graph_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4">00029</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_create_lattice_graph_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4">main</link>()&#32;{
<anchor xml:id="_create_lattice_graph_8cpp_source_1l00030"/>00030 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n&#32;=&#32;4,&#32;m&#32;=&#32;3;
<anchor xml:id="_create_lattice_graph_8cpp_source_1l00031"/>00031 &#32;&#32;<link linkend="_create_graph_8hpp_1adb6c610c60479e8b904f5832786b4125">undirectedGraph</link>&#32;g&#32;=&#32;<link linkend="_create_lattice_graph_8cpp_1a3cb55165ce6d84dde6bc711a07037ed9">create_grid_lattice_graph</link>(n,&#32;m);&#32;<emphasis role="comment">//&#32;create&#32;a&#32;3&#32;x&#32;4&#32;grid&#32;lattice&#32;graph</emphasis>
<anchor xml:id="_create_lattice_graph_8cpp_source_1l00032"/>00032 
<anchor xml:id="_create_lattice_graph_8cpp_source_1l00033"/>00033 &#32;&#32;&#32;&#32;std::pair&lt;edge_iterator,&#32;edge_iterator&gt;&#32;ei&#32;=&#32;edges(g);
<anchor xml:id="_create_lattice_graph_8cpp_source_1l00034"/>00034 &#32;
<anchor xml:id="_create_lattice_graph_8cpp_source_1l00035"/>00035 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Number&#32;of&#32;edges&#32;=&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;num_edges(g)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>;
<anchor xml:id="_create_lattice_graph_8cpp_source_1l00036"/>00036 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Edge&#32;list:\n&quot;</emphasis>;
<anchor xml:id="_create_lattice_graph_8cpp_source_1l00037"/>00037 &#32;
<anchor xml:id="_create_lattice_graph_8cpp_source_1l00038"/>00038 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_create_graph_8hpp_1af04c50f717d4bda41f0c58fe0eece059">edge_iterator</link>&#32;it&#32;=&#32;ei.first;&#32;it&#32;!=&#32;ei.second;&#32;++it&#32;)
<anchor xml:id="_create_lattice_graph_8cpp_source_1l00039"/>00039 &#32;&#32;&#32;&#32;{
<anchor xml:id="_create_lattice_graph_8cpp_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;*it&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="_create_lattice_graph_8cpp_source_1l00041"/>00041 &#32;&#32;&#32;&#32;}
<anchor xml:id="_create_lattice_graph_8cpp_source_1l00042"/>00042 &#32;
<anchor xml:id="_create_lattice_graph_8cpp_source_1l00043"/>00043 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="_create_lattice_graph_8cpp_source_1l00044"/>00044 
<anchor xml:id="_create_lattice_graph_8cpp_source_1l00045"/>00045 &#32;&#32;&#32;&#32;<link linkend="_create_graph_8hpp_1a9451df0dac964b257bedb5e60547824e">vertex_iterator</link>&#32;vi,&#32;vi_end;
<anchor xml:id="_create_lattice_graph_8cpp_source_1l00046"/>00046 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Vertex&#32;list:\n&quot;</emphasis>;
<anchor xml:id="_create_lattice_graph_8cpp_source_1l00047"/>00047 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(tie(vi,&#32;vi_end)&#32;=&#32;vertices(g);&#32;vi&#32;!=&#32;vi_end;&#32;++vi)&#32;{
<anchor xml:id="_create_lattice_graph_8cpp_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;*vi&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>;
<anchor xml:id="_create_lattice_graph_8cpp_source_1l00049"/>00049 &#32;&#32;&#32;&#32;}
<anchor xml:id="_create_lattice_graph_8cpp_source_1l00050"/>00050 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="_create_lattice_graph_8cpp_source_1l00051"/>00051 
<anchor xml:id="_create_lattice_graph_8cpp_source_1l00052"/>00052 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="_create_lattice_graph_8cpp_source_1l00053"/>00053 }
</programlisting></section>
