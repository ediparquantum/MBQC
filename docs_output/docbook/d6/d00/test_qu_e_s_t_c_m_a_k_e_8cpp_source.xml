<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_test_qu_e_s_t_c_m_a_k_e_8cpp_source" xml:lang="en-US">
<title>testQuESTCMAKE.cpp</title>
<indexterm><primary>src/testQuESTCMAKE.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_test_qu_e_s_t_c_m_a_k_e_8cpp_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&lt;iostream&gt;</emphasis>
<anchor xml:id="_test_qu_e_s_t_c_m_a_k_e_8cpp_source_1l00002"/>00002 <emphasis role="preprocessor">#include&#32;&lt;vector&gt;</emphasis>
<anchor xml:id="_test_qu_e_s_t_c_m_a_k_e_8cpp_source_1l00003"/>00003 <emphasis role="preprocessor">#include&#32;&lt;algorithm&gt;</emphasis>
<anchor xml:id="_test_qu_e_s_t_c_m_a_k_e_8cpp_source_1l00004"/>00004 <emphasis role="preprocessor">#include&#32;&lt;boost/container/vector.hpp&gt;</emphasis>
<anchor xml:id="_test_qu_e_s_t_c_m_a_k_e_8cpp_source_1l00005"/>00005 
<anchor xml:id="_test_qu_e_s_t_c_m_a_k_e_8cpp_source_1l00006"/><link linkend="_test_qu_e_s_t_c_m_a_k_e_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4">00006</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_test_qu_e_s_t_c_m_a_k_e_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4">main</link>()&#32;{
<anchor xml:id="_test_qu_e_s_t_c_m_a_k_e_8cpp_source_1l00007"/>00007 &#32;&#32;&#32;&#32;std::vector&lt;int&gt;&#32;numbers;&#32;<emphasis role="comment">//&#32;Create&#32;a&#32;vector&#32;to&#32;store&#32;the&#32;numbers</emphasis>
<anchor xml:id="_test_qu_e_s_t_c_m_a_k_e_8cpp_source_1l00008"/>00008 
<anchor xml:id="_test_qu_e_s_t_c_m_a_k_e_8cpp_source_1l00009"/>00009 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Populate&#32;the&#32;vector&#32;with&#32;numbers&#32;from&#32;1&#32;to&#32;10</emphasis>
<anchor xml:id="_test_qu_e_s_t_c_m_a_k_e_8cpp_source_1l00010"/>00010 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;1;&#32;i&#32;&lt;=&#32;10;&#32;i++)&#32;{
<anchor xml:id="_test_qu_e_s_t_c_m_a_k_e_8cpp_source_1l00011"/>00011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;numbers.push_back(i);
<anchor xml:id="_test_qu_e_s_t_c_m_a_k_e_8cpp_source_1l00012"/>00012 &#32;&#32;&#32;&#32;}
<anchor xml:id="_test_qu_e_s_t_c_m_a_k_e_8cpp_source_1l00013"/>00013 
<anchor xml:id="_test_qu_e_s_t_c_m_a_k_e_8cpp_source_1l00014"/>00014 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Square&#32;each&#32;element&#32;in&#32;the&#32;vector</emphasis>
<anchor xml:id="_test_qu_e_s_t_c_m_a_k_e_8cpp_source_1l00015"/>00015 &#32;&#32;&#32;&#32;std::transform(numbers.begin(),&#32;numbers.end(),&#32;numbers.begin(),&#32;[](<emphasis role="keywordtype">int</emphasis>&#32;num)&#32;{
<anchor xml:id="_test_qu_e_s_t_c_m_a_k_e_8cpp_source_1l00016"/>00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;num&#32;*&#32;num;
<anchor xml:id="_test_qu_e_s_t_c_m_a_k_e_8cpp_source_1l00017"/>00017 &#32;&#32;&#32;&#32;});
<anchor xml:id="_test_qu_e_s_t_c_m_a_k_e_8cpp_source_1l00018"/>00018 
<anchor xml:id="_test_qu_e_s_t_c_m_a_k_e_8cpp_source_1l00019"/>00019 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Print&#32;the&#32;squared&#32;numbers</emphasis>
<anchor xml:id="_test_qu_e_s_t_c_m_a_k_e_8cpp_source_1l00020"/>00020 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;num&#32;:&#32;numbers)&#32;{
<anchor xml:id="_test_qu_e_s_t_c_m_a_k_e_8cpp_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;num&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>;
<anchor xml:id="_test_qu_e_s_t_c_m_a_k_e_8cpp_source_1l00022"/>00022 &#32;&#32;&#32;&#32;}
<anchor xml:id="_test_qu_e_s_t_c_m_a_k_e_8cpp_source_1l00023"/>00023 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="_test_qu_e_s_t_c_m_a_k_e_8cpp_source_1l00024"/>00024 
<anchor xml:id="_test_qu_e_s_t_c_m_a_k_e_8cpp_source_1l00025"/>00025 
<anchor xml:id="_test_qu_e_s_t_c_m_a_k_e_8cpp_source_1l00026"/>00026 
<anchor xml:id="_test_qu_e_s_t_c_m_a_k_e_8cpp_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;boost::container::vector&lt;int&gt;&#32;myVector;
<anchor xml:id="_test_qu_e_s_t_c_m_a_k_e_8cpp_source_1l00028"/>00028 
<anchor xml:id="_test_qu_e_s_t_c_m_a_k_e_8cpp_source_1l00029"/>00029 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Add&#32;elements&#32;to&#32;the&#32;vector</emphasis>
<anchor xml:id="_test_qu_e_s_t_c_m_a_k_e_8cpp_source_1l00030"/>00030 &#32;&#32;&#32;&#32;myVector.push_back(10);
<anchor xml:id="_test_qu_e_s_t_c_m_a_k_e_8cpp_source_1l00031"/>00031 &#32;&#32;&#32;&#32;myVector.push_back(20);
<anchor xml:id="_test_qu_e_s_t_c_m_a_k_e_8cpp_source_1l00032"/>00032 &#32;&#32;&#32;&#32;myVector.push_back(30);
<anchor xml:id="_test_qu_e_s_t_c_m_a_k_e_8cpp_source_1l00033"/>00033 
<anchor xml:id="_test_qu_e_s_t_c_m_a_k_e_8cpp_source_1l00034"/>00034 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Print&#32;the&#32;elements&#32;of&#32;the&#32;vector</emphasis>
<anchor xml:id="_test_qu_e_s_t_c_m_a_k_e_8cpp_source_1l00035"/>00035 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&amp;&#32;element&#32;:&#32;myVector)&#32;{
<anchor xml:id="_test_qu_e_s_t_c_m_a_k_e_8cpp_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;element&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>;
<anchor xml:id="_test_qu_e_s_t_c_m_a_k_e_8cpp_source_1l00037"/>00037 &#32;&#32;&#32;&#32;}
<anchor xml:id="_test_qu_e_s_t_c_m_a_k_e_8cpp_source_1l00038"/>00038 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="_test_qu_e_s_t_c_m_a_k_e_8cpp_source_1l00039"/>00039 
<anchor xml:id="_test_qu_e_s_t_c_m_a_k_e_8cpp_source_1l00040"/>00040 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="_test_qu_e_s_t_c_m_a_k_e_8cpp_source_1l00041"/>00041 }
</programlisting></section>
