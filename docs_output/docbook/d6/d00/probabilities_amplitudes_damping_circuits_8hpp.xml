<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_probabilities_amplitudes_damping_circuits_8hpp" xml:lang="en-US">
<title>src/testFunctions/probabilitiesAmplitudesDampingCircuits.hpp File Reference</title>
<indexterm><primary>src/testFunctions/probabilitiesAmplitudesDampingCircuits.hpp</primary></indexterm>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_probabilities_amplitudes_damping_circuits_8hpp_1aa20aa58ec759d87b836c19d8140445dc">applySingleQubitPauliXMixDamping</link> (qreal prob, std::string fileAmp, std::string fileProb)</para>

<para>Applies a single-qubit Pauli-X gate followed by mix damping to a quantum system. </para>
</listitem>
            <listitem><para>void <link linkend="_probabilities_amplitudes_damping_circuits_8hpp_1a2c742a3dbd13ecb76c32ea605ace9c5a">applySingleQubitHGateMixDamping</link> (qreal prob, std::string fileAmp, std::string fileProb)</para>

<para>Applies a single-qubit Hadamard gate followed by mix damping to a quantum system. </para>
</listitem>
            <listitem><para>void <link linkend="_probabilities_amplitudes_damping_circuits_8hpp_1a5b32b75a35ce71806d1c4dd09e316d32">applyOnTwoQubitPauliXEachQubitMixDamping</link> (qreal prob, std::string fileAmp, std::string fileProb)</para>

<para>Applies Pauli-X gates followed by mix damping to each qubit of a two-qubit quantum system. </para>
</listitem>
            <listitem><para>void <link linkend="_probabilities_amplitudes_damping_circuits_8hpp_1a0e0364e3829b875d9fdf4dcd405ce17b">applyOnTwoQubitHGateEachQubitMixDamping</link> (qreal prob, std::string fileAmp, std::string fileProb)</para>

<para>Applies Hadamard gates followed by mix damping to each qubit of a two-qubit quantum system. </para>
</listitem>
            <listitem><para>void <link linkend="_probabilities_amplitudes_damping_circuits_8hpp_1a5831b982783a400e7bc0ab09fe410f10">applyTwoQubitHCZGateBetweenQubitMixDamping</link> (qreal prob, std::string fileAmp, std::string fileProb)</para>

<para>Applies a controlled-Z gate followed by mix damping to two qubits of a two-qubit quantum system. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_probabilities_amplitudes_damping_circuits_8hpp_1a0e0364e3829b875d9fdf4dcd405ce17b"/><section>
    <title>applyOnTwoQubitHGateEachQubitMixDamping()</title>
<indexterm><primary>applyOnTwoQubitHGateEachQubitMixDamping</primary><secondary>probabilitiesAmplitudesDampingCircuits.hpp</secondary></indexterm>
<indexterm><primary>probabilitiesAmplitudesDampingCircuits.hpp</primary><secondary>applyOnTwoQubitHGateEachQubitMixDamping</secondary></indexterm>
<para><computeroutput>void applyOnTwoQubitHGateEachQubitMixDamping (qreal prob, std::string fileAmp, std::string fileProb)</computeroutput></para><para>

<para>Applies Hadamard gates followed by mix damping to each qubit of a two-qubit quantum system. </para>
</para>

<para>The function applies Hadamard gates followed by mix damping to each qubit of the two-qubit quantum system. It then writes the amplitudes and probabilities of the quantum system to the specified files.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>prob</entry><entry>
<para>The probability of mix damping. </para>
</entry>
                            </row>
                            <row>
<entry>fileAmp</entry><entry>
<para>The file path to write the amplitudes. </para>
</entry>
                            </row>
                            <row>
<entry>fileProb</entry><entry>
<para>The file path to write the probabilities. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_probabilities_amplitudes_damping_circuits_8hpp_source_1l00143">143</link> of file <link linkend="_probabilities_amplitudes_damping_circuits_8hpp_source">probabilitiesAmplitudesDampingCircuits.hpp</link>.</para>
<programlisting linenumbering="unnumbered">00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;numQubits&#32;=&#32;2;
00145 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;load&#32;QuEST&#32;environment</emphasis>
00146 &#32;&#32;&#32;&#32;QuESTEnv&#32;env&#32;=&#32;createQuESTEnv();
00147 &#32;&#32;&#32;&#32;
00148 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Create&#32;qureg</emphasis>
00149 &#32;&#32;&#32;&#32;Qureg&#32;qureg&#32;=&#32;createDensityQureg(numQubits,&#32;env);
00150 
00151 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Apply&#32;elements&#32;to&#32;circuit</emphasis>
00152 &#32;&#32;&#32;&#32;hadamard(qureg,0);
00153 &#32;&#32;&#32;&#32;hadamard(qureg,1);
00154 &#32;&#32;&#32;&#32;mixDamping(qureg,0,prob);
00155 &#32;&#32;&#32;&#32;mixDamping(qureg,1,prob);
00156 &#32;&#32;&#32;&#32;
00157 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Write&#32;amplitudes&#32;to&#32;file</emphasis>
00158 &#32;&#32;&#32;&#32;<link linkend="_general_helper_functions_8hpp_1a7465cffdfd3bf3b9d59175e8194b4588">writeStateToFile</link>(qureg,fileAmp);
00159 
00160 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Compute&#32;probabilities</emphasis>
00161 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;numProbs&#32;=&#32;1&lt;&lt;numQubits;
00162 &#32;&#32;&#32;&#32;qreal&#32;outcomeProbs[numProbs];
00163 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;qubits[]&#32;=&#32;{0,1};
00164 &#32;&#32;&#32;&#32;calcProbOfAllOutcomes(outcomeProbs,qureg,qubits,numQubits);&#32;&#32;&#32;&#32;&#32;
00165 &#32;&#32;&#32;&#32;
00166 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Write&#32;probabilities&#32;to&#32;file</emphasis>
00167 &#32;&#32;&#32;&#32;std::string&#32;col_name&#32;=&#32;<emphasis role="stringliteral">&quot;probabilities&quot;</emphasis>;
00168 &#32;&#32;&#32;&#32;<link linkend="_general_helper_functions_8hpp_1a41a7ac4a876af2866b1d6ab915ecdfb2">writeArrayToFile</link>(outcomeProbs,&#32;numProbs,&#32;fileProb,col_name);
00169 
00170 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;unload&#32;QuEST</emphasis>
00171 &#32;&#32;&#32;&#32;destroyQureg(qureg,&#32;env);&#32;
00172 &#32;&#32;&#32;&#32;destroyQuESTEnv(env);
00173 }
</programlisting></section>
<anchor xml:id="_probabilities_amplitudes_damping_circuits_8hpp_1a5b32b75a35ce71806d1c4dd09e316d32"/><section>
    <title>applyOnTwoQubitPauliXEachQubitMixDamping()</title>
<indexterm><primary>applyOnTwoQubitPauliXEachQubitMixDamping</primary><secondary>probabilitiesAmplitudesDampingCircuits.hpp</secondary></indexterm>
<indexterm><primary>probabilitiesAmplitudesDampingCircuits.hpp</primary><secondary>applyOnTwoQubitPauliXEachQubitMixDamping</secondary></indexterm>
<para><computeroutput>void applyOnTwoQubitPauliXEachQubitMixDamping (qreal prob, std::string fileAmp, std::string fileProb)</computeroutput></para><para>

<para>Applies Pauli-X gates followed by mix damping to each qubit of a two-qubit quantum system. </para>
</para>

<para>The function applies Pauli-X gates followed by mix damping to each qubit of the two-qubit quantum system. It then writes the amplitudes and probabilities of the quantum system to the specified files.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>prob</entry><entry>
<para>The probability of mix damping. </para>
</entry>
                            </row>
                            <row>
<entry>fileAmp</entry><entry>
<para>The file path to write the amplitudes. </para>
</entry>
                            </row>
                            <row>
<entry>fileProb</entry><entry>
<para>The file path to write the probabilities. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_probabilities_amplitudes_damping_circuits_8hpp_source_1l00102">102</link> of file <link linkend="_probabilities_amplitudes_damping_circuits_8hpp_source">probabilitiesAmplitudesDampingCircuits.hpp</link>.</para>
<programlisting linenumbering="unnumbered">00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00103 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;numQubits&#32;=&#32;2;
00104 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;load&#32;QuEST&#32;environment</emphasis>
00105 &#32;&#32;&#32;&#32;QuESTEnv&#32;env&#32;=&#32;createQuESTEnv();
00106 &#32;&#32;&#32;&#32;
00107 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Create&#32;qureg</emphasis>
00108 &#32;&#32;&#32;&#32;Qureg&#32;qureg&#32;=&#32;createDensityQureg(numQubits,&#32;env);
00109 
00110 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Apply&#32;elements&#32;to&#32;circuit</emphasis>
00111 &#32;&#32;&#32;&#32;pauliX(qureg,0);
00112 &#32;&#32;&#32;&#32;pauliX(qureg,1);
00113 &#32;&#32;&#32;&#32;mixDamping(qureg,0,prob);
00114 &#32;&#32;&#32;&#32;mixDamping(qureg,1,prob);
00115 &#32;&#32;&#32;&#32;
00116 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Write&#32;amplitudes&#32;to&#32;file</emphasis>
00117 &#32;&#32;&#32;&#32;<link linkend="_general_helper_functions_8hpp_1a7465cffdfd3bf3b9d59175e8194b4588">writeStateToFile</link>(qureg,fileAmp);
00118 
00119 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Compute&#32;probabilities</emphasis>
00120 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;numProbs&#32;=&#32;1&lt;&lt;numQubits;
00121 &#32;&#32;&#32;&#32;qreal&#32;outcomeProbs[numProbs];
00122 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;qubits[]&#32;=&#32;{0,1};
00123 &#32;&#32;&#32;&#32;calcProbOfAllOutcomes(outcomeProbs,qureg,qubits,numQubits);&#32;&#32;&#32;&#32;&#32;
00124 &#32;&#32;&#32;&#32;
00125 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Write&#32;probabilities&#32;to&#32;file</emphasis>
00126 &#32;&#32;&#32;&#32;std::string&#32;col_name&#32;=&#32;<emphasis role="stringliteral">&quot;probabilities&quot;</emphasis>;
00127 &#32;&#32;&#32;&#32;<link linkend="_general_helper_functions_8hpp_1a41a7ac4a876af2866b1d6ab915ecdfb2">writeArrayToFile</link>(outcomeProbs,&#32;numProbs,&#32;fileProb,col_name);
00128 
00129 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;unload&#32;QuEST</emphasis>
00130 &#32;&#32;&#32;&#32;destroyQureg(qureg,&#32;env);&#32;
00131 &#32;&#32;&#32;&#32;destroyQuESTEnv(env);
00132 }
</programlisting></section>
<anchor xml:id="_probabilities_amplitudes_damping_circuits_8hpp_1a2c742a3dbd13ecb76c32ea605ace9c5a"/><section>
    <title>applySingleQubitHGateMixDamping()</title>
<indexterm><primary>applySingleQubitHGateMixDamping</primary><secondary>probabilitiesAmplitudesDampingCircuits.hpp</secondary></indexterm>
<indexterm><primary>probabilitiesAmplitudesDampingCircuits.hpp</primary><secondary>applySingleQubitHGateMixDamping</secondary></indexterm>
<para><computeroutput>void applySingleQubitHGateMixDamping (qreal prob, std::string fileAmp, std::string fileProb)</computeroutput></para><para>

<para>Applies a single-qubit Hadamard gate followed by mix damping to a quantum system. </para>
</para>

<para>The function applies a Hadamard gate followed by mix damping to the specified qubit of the quantum system. It then writes the amplitudes and probabilities of the quantum system to the specified files.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>prob</entry><entry>
<para>The probability of mix damping. </para>
</entry>
                            </row>
                            <row>
<entry>fileAmp</entry><entry>
<para>The file path to write the amplitudes. </para>
</entry>
                            </row>
                            <row>
<entry>fileProb</entry><entry>
<para>The file path to write the probabilities. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_probabilities_amplitudes_damping_circuits_8hpp_source_1l00060">60</link> of file <link linkend="_probabilities_amplitudes_damping_circuits_8hpp_source">probabilitiesAmplitudesDampingCircuits.hpp</link>.</para>
<programlisting linenumbering="unnumbered">00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00061 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;numQubits&#32;=&#32;1;
00062 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;load&#32;QuEST&#32;environment</emphasis>
00063 &#32;&#32;&#32;&#32;QuESTEnv&#32;env&#32;=&#32;createQuESTEnv();
00064 &#32;&#32;&#32;&#32;
00065 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Create&#32;qureg</emphasis>
00066 &#32;&#32;&#32;&#32;Qureg&#32;qureg&#32;=&#32;createDensityQureg(numQubits,&#32;env);
00067 
00068 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Apply&#32;elements&#32;to&#32;circuit</emphasis>
00069 &#32;&#32;&#32;&#32;hadamard(qureg,0);
00070 &#32;&#32;&#32;&#32;mixDamping(qureg,0,prob);
00071 &#32;&#32;&#32;&#32;
00072 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Write&#32;amplitudes&#32;to&#32;file</emphasis>
00073 &#32;&#32;&#32;&#32;<link linkend="_general_helper_functions_8hpp_1a7465cffdfd3bf3b9d59175e8194b4588">writeStateToFile</link>(qureg,fileAmp);
00074 
00075 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Compute&#32;probabilities</emphasis>
00076 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;numProbs&#32;=&#32;1&lt;&lt;numQubits;
00077 &#32;&#32;&#32;&#32;qreal&#32;outcomeProbs[numProbs];
00078 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;qubits[]&#32;=&#32;{0};
00079 &#32;&#32;&#32;&#32;calcProbOfAllOutcomes(outcomeProbs,qureg,qubits,numQubits);&#32;&#32;&#32;&#32;&#32;
00080 &#32;&#32;&#32;&#32;
00081 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Write&#32;probabilities&#32;to&#32;file</emphasis>
00082 &#32;&#32;&#32;&#32;std::string&#32;col_name&#32;=&#32;<emphasis role="stringliteral">&quot;probabilities&quot;</emphasis>;
00083 &#32;&#32;&#32;&#32;<link linkend="_general_helper_functions_8hpp_1a41a7ac4a876af2866b1d6ab915ecdfb2">writeArrayToFile</link>(outcomeProbs,&#32;numProbs,&#32;fileProb,col_name);
00084 
00085 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;unload&#32;QuEST</emphasis>
00086 &#32;&#32;&#32;&#32;destroyQureg(qureg,&#32;env);&#32;
00087 &#32;&#32;&#32;&#32;destroyQuESTEnv(env);
00088 &#32;&#32;&#32;&#32;
00089 }
</programlisting></section>
<anchor xml:id="_probabilities_amplitudes_damping_circuits_8hpp_1aa20aa58ec759d87b836c19d8140445dc"/><section>
    <title>applySingleQubitPauliXMixDamping()</title>
<indexterm><primary>applySingleQubitPauliXMixDamping</primary><secondary>probabilitiesAmplitudesDampingCircuits.hpp</secondary></indexterm>
<indexterm><primary>probabilitiesAmplitudesDampingCircuits.hpp</primary><secondary>applySingleQubitPauliXMixDamping</secondary></indexterm>
<para><computeroutput>void applySingleQubitPauliXMixDamping (qreal prob, std::string fileAmp, std::string fileProb)</computeroutput></para><para>

<para>Applies a single-qubit Pauli-X gate followed by mix damping to a quantum system. </para>
</para>

<para>The function applies a Pauli-X gate followed by mix damping to the specified qubit of the quantum system. It then writes the amplitudes and probabilities of the quantum system to the specified files.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>prob</entry><entry>
<para>The probability of mix damping. </para>
</entry>
                            </row>
                            <row>
<entry>fileAmp</entry><entry>
<para>The file path to write the amplitudes. </para>
</entry>
                            </row>
                            <row>
<entry>fileProb</entry><entry>
<para>The file path to write the probabilities. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_probabilities_amplitudes_damping_circuits_8hpp_source_1l00020">20</link> of file <link linkend="_probabilities_amplitudes_damping_circuits_8hpp_source">probabilitiesAmplitudesDampingCircuits.hpp</link>.</para>
<programlisting linenumbering="unnumbered">00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00021 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;numQubits&#32;=&#32;1;
00022 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;load&#32;QuEST&#32;environment</emphasis>
00023 &#32;&#32;&#32;&#32;QuESTEnv&#32;env&#32;=&#32;createQuESTEnv();
00024 &#32;&#32;&#32;&#32;
00025 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Create&#32;qureg</emphasis>
00026 &#32;&#32;&#32;&#32;Qureg&#32;qureg&#32;=&#32;createDensityQureg(numQubits,&#32;env);
00027 
00028 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Apply&#32;elements&#32;to&#32;circuit</emphasis>
00029 &#32;&#32;&#32;&#32;pauliX(qureg,0);
00030 &#32;&#32;&#32;&#32;mixDamping(qureg,0,prob);
00031 &#32;&#32;&#32;&#32;
00032 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Write&#32;amplitudes&#32;to&#32;file</emphasis>
00033 &#32;&#32;&#32;&#32;<link linkend="_general_helper_functions_8hpp_1a7465cffdfd3bf3b9d59175e8194b4588">writeStateToFile</link>(qureg,fileAmp);
00034 
00035 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Compute&#32;probabilities</emphasis>
00036 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;numProbs&#32;=&#32;1&lt;&lt;numQubits;
00037 &#32;&#32;&#32;&#32;qreal&#32;outcomeProbs[numProbs];
00038 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;qubits[]&#32;=&#32;{0};
00039 &#32;&#32;&#32;&#32;calcProbOfAllOutcomes(outcomeProbs,qureg,qubits,numQubits);&#32;&#32;&#32;&#32;&#32;
00040 &#32;&#32;&#32;&#32;
00041 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Write&#32;probabilities&#32;to&#32;file</emphasis>
00042 &#32;&#32;&#32;&#32;std::string&#32;col_name&#32;=&#32;<emphasis role="stringliteral">&quot;probabilities&quot;</emphasis>;
00043 &#32;&#32;&#32;&#32;<link linkend="_general_helper_functions_8hpp_1a41a7ac4a876af2866b1d6ab915ecdfb2">writeArrayToFile</link>(outcomeProbs,&#32;numProbs,&#32;fileProb,col_name);
00044 
00045 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;unload&#32;QuEST</emphasis>
00046 &#32;&#32;&#32;&#32;destroyQureg(qureg,&#32;env);&#32;
00047 &#32;&#32;&#32;&#32;destroyQuESTEnv(env);
00048 &#32;&#32;&#32;&#32;
00049 }
</programlisting></section>
<anchor xml:id="_probabilities_amplitudes_damping_circuits_8hpp_1a5831b982783a400e7bc0ab09fe410f10"/><section>
    <title>applyTwoQubitHCZGateBetweenQubitMixDamping()</title>
<indexterm><primary>applyTwoQubitHCZGateBetweenQubitMixDamping</primary><secondary>probabilitiesAmplitudesDampingCircuits.hpp</secondary></indexterm>
<indexterm><primary>probabilitiesAmplitudesDampingCircuits.hpp</primary><secondary>applyTwoQubitHCZGateBetweenQubitMixDamping</secondary></indexterm>
<para><computeroutput>void applyTwoQubitHCZGateBetweenQubitMixDamping (qreal prob, std::string fileAmp, std::string fileProb)</computeroutput></para><para>

<para>Applies a controlled-Z gate followed by mix damping to two qubits of a two-qubit quantum system. </para>
</para>

<para>The function applies a controlled-Z gate followed by mix damping to the specified two qubits of the two-qubit quantum system. It then writes the amplitudes and probabilities of the quantum system to the specified files.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>prob</entry><entry>
<para>The probability of mix damping. </para>
</entry>
                            </row>
                            <row>
<entry>fileAmp</entry><entry>
<para>The file path to write the amplitudes. </para>
</entry>
                            </row>
                            <row>
<entry>fileProb</entry><entry>
<para>The file path to write the probabilities. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_probabilities_amplitudes_damping_circuits_8hpp_source_1l00185">185</link> of file <link linkend="_probabilities_amplitudes_damping_circuits_8hpp_source">probabilitiesAmplitudesDampingCircuits.hpp</link>.</para>
<programlisting linenumbering="unnumbered">00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;numQubits&#32;=&#32;2;
00187 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;load&#32;QuEST&#32;environment</emphasis>
00188 &#32;&#32;&#32;&#32;QuESTEnv&#32;env&#32;=&#32;createQuESTEnv();
00189 &#32;&#32;&#32;&#32;
00190 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Create&#32;qureg</emphasis>
00191 &#32;&#32;&#32;&#32;Qureg&#32;qureg&#32;=&#32;createDensityQureg(numQubits,&#32;env);
00192 
00193 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Apply&#32;elements&#32;to&#32;circuit</emphasis>
00194 &#32;&#32;&#32;&#32;hadamard(qureg,0);
00195 &#32;&#32;&#32;&#32;hadamard(qureg,1);
00196 &#32;&#32;&#32;&#32;controlledPhaseFlip(qureg,0,1);
00197 &#32;&#32;&#32;&#32;mixDamping(qureg,0,prob);
00198 &#32;&#32;&#32;&#32;mixDamping(qureg,1,prob);
00199 &#32;&#32;&#32;&#32;
00200 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Write&#32;amplitudes&#32;to&#32;file</emphasis>
00201 &#32;&#32;&#32;&#32;<link linkend="_general_helper_functions_8hpp_1a7465cffdfd3bf3b9d59175e8194b4588">writeStateToFile</link>(qureg,fileAmp);
00202 
00203 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Compute&#32;probabilities</emphasis>
00204 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;numProbs&#32;=&#32;1&lt;&lt;numQubits;
00205 &#32;&#32;&#32;&#32;qreal&#32;outcomeProbs[numProbs];
00206 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;qubits[]&#32;=&#32;{0,1};
00207 &#32;&#32;&#32;&#32;calcProbOfAllOutcomes(outcomeProbs,qureg,qubits,numQubits);&#32;&#32;&#32;&#32;&#32;
00208 &#32;&#32;&#32;&#32;
00209 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Write&#32;probabilities&#32;to&#32;file</emphasis>
00210 &#32;&#32;&#32;&#32;std::string&#32;col_name&#32;=&#32;<emphasis role="stringliteral">&quot;probabilities&quot;</emphasis>;
00211 &#32;&#32;&#32;&#32;<link linkend="_general_helper_functions_8hpp_1a41a7ac4a876af2866b1d6ab915ecdfb2">writeArrayToFile</link>(outcomeProbs,&#32;numProbs,&#32;fileProb,col_name);
00212 
00213 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;unload&#32;QuEST</emphasis>
00214 &#32;&#32;&#32;&#32;destroyQureg(qureg,&#32;env);&#32;
00215 &#32;&#32;&#32;&#32;destroyQuESTEnv(env);
00216 }
</programlisting></section>
</section>
</section>
