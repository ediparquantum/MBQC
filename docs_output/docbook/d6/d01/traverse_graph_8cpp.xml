<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_traverse_graph_8cpp" xml:lang="en-US">
<title>src/archive/filesToGoThrough/traverseGraph.cpp File Reference</title>
<indexterm><primary>src/archive/filesToGoThrough/traverseGraph.cpp</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &lt;iostream&gt;<?linebreak?>#include &lt;boost/graph/adjacency_list.hpp&gt;<?linebreak?>#include &quot;createGraph.hpp&quot;<?linebreak?>#include &lt;vector&gt;<?linebreak?></programlisting><simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para>typedef boost::property&lt; boost::edge_weight_t, int &gt; <link linkend="_traverse_graph_8cpp_1ad531f0530c52e2baed8840517b52b457">EdgeWeightProperty</link></para>
</listitem>
            <listitem><para>typedef boost::adjacency_list&lt; boost::listS, boost::vecS, boost::undirectedS, boost::no_property, <link linkend="_create_graph_8hpp_1ad531f0530c52e2baed8840517b52b457">EdgeWeightProperty</link> &gt; <link linkend="_traverse_graph_8cpp_1ae727d82d2665e0ccdbb85e29c841ba5f">undirectedGraph</link></para>
</listitem>
            <listitem><para>typedef boost::graph_traits&lt; <link linkend="_create_graph_8hpp_1adb6c610c60479e8b904f5832786b4125">undirectedGraph</link> &gt;<link linkend="_create_graph_8hpp_1af04c50f717d4bda41f0c58fe0eece059">::edge_iterator</link> <link linkend="_traverse_graph_8cpp_1af04c50f717d4bda41f0c58fe0eece059">edge_iterator</link></para>
</listitem>
            <listitem><para>typedef boost::graph_traits&lt; <link linkend="_create_graph_8hpp_1adb6c610c60479e8b904f5832786b4125">undirectedGraph</link> &gt;<link linkend="_create_graph_8hpp_1a9451df0dac964b257bedb5e60547824e">::vertex_iterator</link> <link linkend="_traverse_graph_8cpp_1a9451df0dac964b257bedb5e60547824e">vertex_iterator</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>int <link linkend="_traverse_graph_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4">main</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Typedef Documentation</title>
<anchor xml:id="_traverse_graph_8cpp_1af04c50f717d4bda41f0c58fe0eece059"/><section>
    <title>edge_iterator</title>
<indexterm><primary>edge_iterator</primary><secondary>traverseGraph.cpp</secondary></indexterm>
<indexterm><primary>traverseGraph.cpp</primary><secondary>edge_iterator</secondary></indexterm>
<para><computeroutput>typedef boost::graph_traits&lt;<link linkend="_create_graph_8hpp_1adb6c610c60479e8b904f5832786b4125">undirectedGraph</link>&gt;<link linkend="_create_graph_8hpp_1af04c50f717d4bda41f0c58fe0eece059">::edge_iterator</link> <link linkend="_create_graph_8hpp_1af04c50f717d4bda41f0c58fe0eece059">edge_iterator</link></computeroutput></para><para>
Definition at line <link linkend="_traverse_graph_8cpp_source_1l00010">10</link> of file <link linkend="_traverse_graph_8cpp_source">traverseGraph.cpp</link>.</para>
</section>
<anchor xml:id="_traverse_graph_8cpp_1ad531f0530c52e2baed8840517b52b457"/><section>
    <title>EdgeWeightProperty</title>
<indexterm><primary>EdgeWeightProperty</primary><secondary>traverseGraph.cpp</secondary></indexterm>
<indexterm><primary>traverseGraph.cpp</primary><secondary>EdgeWeightProperty</secondary></indexterm>
<para><computeroutput>typedef boost::property&lt;boost::edge_weight_t, int&gt; <link linkend="_create_graph_8hpp_1ad531f0530c52e2baed8840517b52b457">EdgeWeightProperty</link></computeroutput></para><para>
Definition at line <link linkend="_traverse_graph_8cpp_source_1l00008">8</link> of file <link linkend="_traverse_graph_8cpp_source">traverseGraph.cpp</link>.</para>
</section>
<anchor xml:id="_traverse_graph_8cpp_1ae727d82d2665e0ccdbb85e29c841ba5f"/><section>
    <title>undirectedGraph</title>
<indexterm><primary>undirectedGraph</primary><secondary>traverseGraph.cpp</secondary></indexterm>
<indexterm><primary>traverseGraph.cpp</primary><secondary>undirectedGraph</secondary></indexterm>
<para><computeroutput>typedef boost::adjacency_list&lt;boost::listS, boost::vecS,boost::undirectedS,boost::no_property,<link linkend="_create_graph_8hpp_1ad531f0530c52e2baed8840517b52b457">EdgeWeightProperty</link>&gt; <link linkend="_create_graph_8hpp_1adb6c610c60479e8b904f5832786b4125">undirectedGraph</link></computeroutput></para><para>
Definition at line <link linkend="_traverse_graph_8cpp_source_1l00009">9</link> of file <link linkend="_traverse_graph_8cpp_source">traverseGraph.cpp</link>.</para>
</section>
<anchor xml:id="_traverse_graph_8cpp_1a9451df0dac964b257bedb5e60547824e"/><section>
    <title>vertex_iterator</title>
<indexterm><primary>vertex_iterator</primary><secondary>traverseGraph.cpp</secondary></indexterm>
<indexterm><primary>traverseGraph.cpp</primary><secondary>vertex_iterator</secondary></indexterm>
<para><computeroutput>typedef boost::graph_traits&lt;<link linkend="_create_graph_8hpp_1adb6c610c60479e8b904f5832786b4125">undirectedGraph</link>&gt;<link linkend="_create_graph_8hpp_1a9451df0dac964b257bedb5e60547824e">::vertex_iterator</link> <link linkend="_create_graph_8hpp_1a9451df0dac964b257bedb5e60547824e">vertex_iterator</link></computeroutput></para><para>
Definition at line <link linkend="_traverse_graph_8cpp_source_1l00011">11</link> of file <link linkend="_traverse_graph_8cpp_source">traverseGraph.cpp</link>.</para>
</section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_traverse_graph_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4"/><section>
    <title>main()</title>
<indexterm><primary>main</primary><secondary>traverseGraph.cpp</secondary></indexterm>
<indexterm><primary>traverseGraph.cpp</primary><secondary>main</secondary></indexterm>
<para><computeroutput>int main ( )</computeroutput></para><para>
Definition at line <link linkend="_traverse_graph_8cpp_source_1l00015">15</link> of file <link linkend="_traverse_graph_8cpp_source">traverseGraph.cpp</link>.</para>
<programlisting linenumbering="unnumbered">00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00016 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;rows;
00017 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;cols;
00018 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;pathVertices;
00019 &#32;&#32;&#32;&#32;<link linkend="_create_graph_8hpp_1adb6c610c60479e8b904f5832786b4125">undirectedGraph</link>&#32;pathGraph;
00020 &#32;&#32;&#32;&#32;<link linkend="_create_graph_8hpp_1adb6c610c60479e8b904f5832786b4125">undirectedGraph</link>&#32;latticeGraph;
00021 &#32;&#32;&#32;&#32;
00022 &#32;&#32;&#32;&#32;rows&#32;=&#32;100;
00023 &#32;&#32;&#32;&#32;cols&#32;=&#32;100;
00024 &#32;&#32;&#32;&#32;pathVertices&#32;=&#32;1000;
00025 
00026 
00027 &#32;&#32;&#32;&#32;pathGraph&#32;=&#32;<link linkend="_create_graph_8hpp_1abe67d4f4ed1169c1376d3a14fd9d144d">createPathGraph</link>(pathVertices);
00028 &#32;&#32;&#32;&#32;latticeGraph&#32;=&#32;<link linkend="_create_graph_8hpp_1aabb013bb6de93b1ca2ff83e1d7d200c7">createLatticeGraph</link>(rows,cols);
00029 
00030 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Call&#32;the&#32;function&#32;and&#32;print&#32;the&#32;adjacent&#32;vertices&#32;of&#32;vertex&#32;0</emphasis>
00031 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i=0;i&lt;pathVertices;i++)
00032 &#32;&#32;&#32;&#32;{
00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::vector&lt;undirectedGraph::vertex_descriptor&gt;&#32;adj_vertices&#32;=&#32;<link linkend="_create_graph_8hpp_1a95616ef95512e388dddbc756c8644c4d">get_adjacent_vertices</link>(pathGraph,&#32;i);
00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">auto</emphasis>&#32;v&#32;:&#32;adj_vertices)
00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;v&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>;
00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;std::endl;
00039 &#32;&#32;&#32;&#32;}
00040 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
00041 }
</programlisting></section>
</section>
</section>
