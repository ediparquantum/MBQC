<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_graph_constructions_8hpp" xml:lang="en-US">
<title>src/graphs/graphConstructions.hpp File Reference</title>
<indexterm><primary>src/graphs/graphConstructions.hpp</primary></indexterm>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>std::vector&lt; std::vector&lt; int &gt; &gt; <link linkend="_graph_constructions_8hpp_1a6e0974be2fa2e599ab591aa02f1c9eb2">create_lattice</link> (int numRows, int numCols)</para>

<para>Creates a lattice graph from two integers. </para>
</listitem>
            <listitem><para><link linkend="_packages_8hpp_1adb6c610c60479e8b904f5832786b4125">undirectedGraph</link> <link linkend="_graph_constructions_8hpp_1a74f9014929a19ec558c3bc766754f1c3">createLatticeGraph</link> (int numRows, int numCols)</para>

<para>Creates an undirected lattice graph with the specified number of rows and columns. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_graph_constructions_8hpp_1a6e0974be2fa2e599ab591aa02f1c9eb2"/><section>
    <title>create_lattice()</title>
<indexterm><primary>create_lattice</primary><secondary>graphConstructions.hpp</secondary></indexterm>
<indexterm><primary>graphConstructions.hpp</primary><secondary>create_lattice</secondary></indexterm>
<para><computeroutput>std::vector&lt; std::vector&lt; int &gt; &gt; create_lattice (int numRows, int numCols)</computeroutput></para><para>

<para>Creates a lattice graph from two integers. </para>
</para>

<para>This function takes two integers as parameters and returns a littice graph with them as parameters</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>numRows</entry><entry>
<para>The number of rows. </para>
</entry>
                            </row>
                            <row>
<entry>numCols</entry><entry>
<para>The number of columns. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>A lattice graph. </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_graph_constructions_8hpp_source_1l00021">21</link> of file <link linkend="_graph_constructions_8hpp_source">graphConstructions.hpp</link>.</para>
<programlisting linenumbering="unnumbered">00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00022 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;numVertices&#32;=&#32;numRows&#32;*&#32;numCols;
00023 &#32;&#32;&#32;&#32;std::vector&lt;std::vector&lt;int&gt;&gt;&#32;lattice(numRows,&#32;std::vector&lt;int&gt;(numCols,&#32;-1));
00024 &#32;&#32;&#32;&#32;std::vector&lt;int&gt;&#32;numbers(numVertices);
00025 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;numVertices;&#32;i++)&#32;{
00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;numbers[i]&#32;=&#32;i;
00027 &#32;&#32;&#32;&#32;}
00028 
00029 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;number&#32;:&#32;numbers)&#32;{
00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;row&#32;=&#32;number&#32;%&#32;numRows;
00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;col&#32;=&#32;number&#32;/&#32;numRows;
00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lattice[row][col]&#32;=&#32;number;
00033 &#32;&#32;&#32;&#32;}
00034 
00035 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;lattice;
00036 }
</programlisting></section>
<anchor xml:id="_graph_constructions_8hpp_1a74f9014929a19ec558c3bc766754f1c3"/><section>
    <title>createLatticeGraph()</title>
<indexterm><primary>createLatticeGraph</primary><secondary>graphConstructions.hpp</secondary></indexterm>
<indexterm><primary>graphConstructions.hpp</primary><secondary>createLatticeGraph</secondary></indexterm>
<para><computeroutput><link linkend="_packages_8hpp_1adb6c610c60479e8b904f5832786b4125">undirectedGraph</link> createLatticeGraph (int numRows, int numCols)</computeroutput></para><para>

<para>Creates an undirected lattice graph with the specified number of rows and columns. </para>
</para>

<para>This function creates an undirected lattice graph based on the given number of rows and columns. It uses the create_lattice function to generate the lattice structure and then constructs a corresponding Boost Graph using the undirectedGraph typedef.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>numRows</entry><entry>
<para>The number of rows in the lattice graph. </para>
</entry>
                            </row>
                            <row>
<entry>numCols</entry><entry>
<para>The number of columns in the lattice graph. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>The created undirected lattice graph represented by an undirectedGraph. </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_graph_constructions_8hpp_source_1l00051">51</link> of file <link linkend="_graph_constructions_8hpp_source">graphConstructions.hpp</link>.</para>
<programlisting linenumbering="unnumbered">00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;
00052 &#32;&#32;&#32;&#32;std::vector&lt;std::vector&lt;int&gt;&gt;&#32;lattice&#32;=&#32;<link linkend="_graph_constructions_8hpp_1a6e0974be2fa2e599ab591aa02f1c9eb2">create_lattice</link>(numRows,&#32;numCols);
00053 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;numVertices&#32;=&#32;numRows&#32;*&#32;numCols;
00054 &#32;&#32;&#32;&#32;<link linkend="_packages_8hpp_1adb6c610c60479e8b904f5832786b4125">undirectedGraph</link>&#32;latticeGraph(numVertices);
00055 &#32;&#32;&#32;&#32;
00056 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Add&#32;edges&#32;to&#32;the&#32;graph</emphasis>
00057 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;row&#32;=&#32;0;&#32;row&#32;&lt;&#32;numRows;&#32;row++)&#32;{
00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;col&#32;=&#32;0;&#32;col&#32;&lt;&#32;numCols;&#32;col++)&#32;{
00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(row&#32;+&#32;1&#32;&lt;&#32;numRows)&#32;{
00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;boost::add_edge(lattice[row][col],&#32;lattice[row&#32;+&#32;1][col],&#32;latticeGraph);
00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(col&#32;+&#32;1&#32;&lt;&#32;numCols)&#32;{
00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;boost::add_edge(lattice[row][col],&#32;lattice[row][col&#32;+&#32;1],&#32;latticeGraph);
00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00066 &#32;&#32;&#32;&#32;}
00067 
00068 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;latticeGraph;
00069 }
</programlisting></section>
</section>
</section>
