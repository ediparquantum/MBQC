<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_mbqc_starter_tutorial" xml:lang="en-US">
<title>Tutorial 1: MBQC Starter</title>
<indexterm><primary>Tutorial 1: MBQC Starter</primary></indexterm>
<section xml:id="_mbqc_starter_tutorial_1intro">
<title>Introduction</title>

<para>This tutorial provides an overview of the MBQC Starter File script. The script demonstrates the implementation of Measurement-Based Quantum Computing (MBQC) using the QuEST library. It creates a lattice graph, initializes a quantum register, applies rotations to the qubits, entangles the graph, performs measurements, and prints the results.</para>

<para>For the source code of the tutorial, see the file <link linkend="_mbqc_starter_8cpp">examples/mbqcStarter.cpp</link></para>
</section>
<section xml:id="_mbqc_starter_tutorial_1overview">
<title>Script Overview</title>

<para>The script performs the following steps:<itemizedlist>
<listitem>
<para>Includes the necessary package header file.</para>
</listitem><listitem>
<para>Declares and initializes variables of different types.</para>
</listitem><listitem>
<para>Creates a lattice graph based on the specified number of rows and columns.</para>
</listitem><listitem>
<para>Prints the graph to a file.</para>
</listitem><listitem>
<para>Initializes the QuEST environment and creates a quantum register with the specified number of vertices.</para>
</listitem><listitem>
<para>Initializes random angles in the range of π on N angles and assigns them to the qubitAngles vector.</para>
</listitem><listitem>
<para>Initializes the quantum register in the plus state.</para>
</listitem><listitem>
<para>Applies angle rotations around the Z-axis to the qubits based on the qubitAngles vector.</para>
</listitem><listitem>
<para>Entangles the graph using the entangleGraph function.</para>
</listitem><listitem>
<para>Measures the graph, and stores the outcomes in the measuredQubitsOutcomes vector.</para>
</listitem><listitem>
<para>Prints the results to the screen.</para>
</listitem><listitem>
<para>Deallocates the QuEST environment and the quantum register.</para>
</listitem></itemizedlist>
</para>
</section>
<section xml:id="_mbqc_starter_tutorial_1usage">
<title>Usage</title>

<para>To use the MBQC Starter File script:<itemizedlist>
<listitem>
<para>Modify the values of numRows and numCols to set the desired number of rows and columns for the lattice graph.</para>
</listitem><listitem>
<para>Set the figsDir variable to the desired directory to view the graph.</para>
</listitem><listitem>
<para>Compile and run the script.</para>
</listitem></itemizedlist>
</para>
<section xml:id="_mbqc_starter_tutorial_1include">
<title>Include Package Header File</title>

<para>The script starts by including the necessary package header file:</para>

<para><literallayout><computeroutput><emphasis role="preprocessor">#include&#32;&quot;<link linkend="_packages_8hpp">packages.hpp</link>&quot;</emphasis>
</computeroutput></literallayout></para>
</section>
<section xml:id="_mbqc_starter_tutorial_1main">
<title>Set up the Main Function</title>

<para>The main function is set up as follows:</para>

<para><literallayout><computeroutput><emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_mbqc_starter_file_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4">main</link>()&#32;{
&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Initialise&#32;variable&#32;names&#32;and&#32;types</emphasis>
&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;numRows;
&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;numCols;
&#32;&#32;&#32;&#32;<link linkend="_packages_8hpp_1adb6c610c60479e8b904f5832786b4125">undirectedGraph</link>&#32;latticeGraph;
&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;numVertices;
&#32;&#32;&#32;&#32;std::vector&lt;qreal&gt;&#32;qubitAngles;
&#32;&#32;&#32;&#32;std::vector&lt;int&gt;&#32;measuredQubitsOutcomes;
</computeroutput></literallayout></para>
</section>
<section xml:id="_mbqc_starter_tutorial_1setvalues">
<title>Set Values to Variables</title>

<para>The values for <computeroutput>numRows</computeroutput>, <computeroutput>numCols</computeroutput>, and <computeroutput>latticeGraph</computeroutput> are set as follows:</para>

<para><literallayout><computeroutput>numRows&#32;=&#32;4;
numCols&#32;=&#32;4;
latticeGraph&#32;=&#32;<link linkend="_graph_constructions_8hpp_1a74f9014929a19ec558c3bc766754f1c3">createLatticeGraph</link>(numRows,&#32;numCols);
numVertices&#32;=&#32;boost::num_vertices(latticeGraph);
</computeroutput></literallayout></para>
</section>
<section xml:id="_mbqc_starter_tutorial_1printgraph">
<title>Print Graph to File</title>

<para>The graph is printed to a file using the specified directory, graph name, and format:</para>

<para><literallayout><computeroutput><emphasis role="comment">//&#32;Print&#32;graph&#32;to&#32;file</emphasis>
<emphasis role="comment">//&#32;Update&#32;with&#32;desired&#32;directory&#32;to&#32;view&#32;graph.</emphasis>
std::string&#32;figsDir&#32;=&#32;MBQC_FIGS_DIR;
std::string&#32;graphName&#32;=&#32;<emphasis role="stringliteral">&quot;lattice2DGraphCmakeV2&quot;</emphasis>;
std::string&#32;format&#32;=&#32;PNG_FORMAT;
<link linkend="_write_graph_graph_viz_dot_file_8hpp_1a3d553b54b16922ee146bfb33201a3993">printGraphToFile</link>(latticeGraph,&#32;figsDir,&#32;graphName,&#32;format);
</computeroutput></literallayout></para>
</section>
<section xml:id="_mbqc_starter_tutorial_1loadenv">
<title>Load QuEST Environment</title>

<para>The QuEST environment is loaded using the <computeroutput>createQuESTEnv</computeroutput> function:</para>

<para><literallayout><computeroutput><emphasis role="comment">//&#32;load&#32;QuEST&#32;environment</emphasis>
QuESTEnv&#32;env&#32;=&#32;createQuESTEnv();
</computeroutput></literallayout></para>
</section>
<section xml:id="_mbqc_starter_tutorial_1createqreg">
<title>Create Quantum Register</title>

<para>The quantum register is created using the specified number of vertices:</para>

<para><literallayout><computeroutput><emphasis role="comment">//&#32;create&#32;a&#32;quantum&#32;register</emphasis>
Qureg&#32;qureg&#32;=&#32;createQureg(numVertices,&#32;env);
</computeroutput></literallayout></para>
</section>
<section xml:id="_mbqc_starter_tutorial_1initangles">
<title>Initialize Random Angles</title>

<para>Random angles in the range of π on N angles are initialized and assigned to the <computeroutput>qubitAngles</computeroutput> vector:</para>

<para><literallayout><computeroutput><emphasis role="comment">//qubitAngles&#32;=&#32;initRandomPiOnNAnglesMod2kPi(numVertices,&#32;4);</emphasis>
qubitAngles&#32;=&#32;<link linkend="_angle_construction_8hpp_1adde2e56cefa79b49346bc9e560b4430b">initRandomPiOnNAnglesMod2kPiPlusPi</link>(numVertices,&#32;4);
</computeroutput></literallayout></para>
</section>
<section xml:id="_mbqc_starter_tutorial_1initstate">
<title>Initialize in Plus State</title>

<para>The quantum register is initialized in the plus state using the <computeroutput>initPlusState</computeroutput> function:</para>

<para><literallayout><computeroutput><emphasis role="comment">//&#32;initialise&#32;in&#32;the&#32;plus&#32;state</emphasis>
initPlusState(qureg);
</computeroutput></literallayout></para>
</section>
<section xml:id="_mbqc_starter_tutorial_1addangles">
<title>Add Angles to Qubits</title>

<para>Angle rotations around the Z-axis are added to the qubits based on the <computeroutput>qubitAngles</computeroutput> vector:</para>

<para><literallayout><computeroutput><emphasis role="comment">//&#32;add&#32;angles&#32;to&#32;the&#32;qubits</emphasis>
<link linkend="_angle_construction_8hpp_1a6647ed996ec54a9137e68e6c6317e8ee">addAngleRotateZgate</link>(qureg,&#32;qubitAngles);
</computeroutput></literallayout></para>
</section>
<section xml:id="_mbqc_starter_tutorial_1entangle">
<title>Entangle Graph</title>

<para>The graph is entangled using the <computeroutput>entangleGraph</computeroutput> function:</para>

<para><literallayout><computeroutput><emphasis role="comment">//&#32;entangle&#32;graph</emphasis>
<link linkend="_quantum_graph_cluster_states_8hpp_1a3f830234f9eb3a150a084b0f2b4aa056">entangleGraph</link>(qureg,&#32;latticeGraph);
</computeroutput></literallayout></para>
</section>
<section xml:id="_mbqc_starter_tutorial_1measure">
<title>Measure Graph</title>

<para>The graph is measured, and the outcomes are stored in the <computeroutput>measuredQubitsOutcomes</computeroutput> vector:</para>

<para><literallayout><computeroutput><emphasis role="comment">//&#32;measure&#32;graph</emphasis>
measuredQubitsOutcomes&#32;=&#32;<link linkend="_flow_measurements_8hpp_1a7231be9a1c347894c1d01c349f4b41c7">measureGraph</link>(qureg,&#32;latticeGraph,&#32;qubitAngles,&#32;numRows);
</computeroutput></literallayout></para>
</section>
<section xml:id="_mbqc_starter_tutorial_1printresults">
<title>Print Results to Screen</title>

<para>The results are printed to the screen using the <computeroutput>printResultsToScreen</computeroutput> function:</para>

<para><literallayout><computeroutput><emphasis role="comment">//&#32;print&#32;results&#32;to&#32;screen</emphasis>
<link linkend="_flow_measurements_8hpp_1a202e2cd0edb82aacb879f3ad4360dc36">printResultsToScreen</link>(measuredQubitsOutcomes,&#32;numRows,&#32;numCols);
</computeroutput></literallayout></para>
</section>
<section xml:id="_mbqc_starter_tutorial_1unloadenv">
<title>Unload QuEST</title>

<para>The QuEST environment and the quantum register are deallocated:</para>

<para><literallayout><computeroutput>&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;unload&#32;QuEST</emphasis>
&#32;&#32;&#32;&#32;destroyQureg(qureg,&#32;env);&#32;
&#32;&#32;&#32;&#32;destroyQuESTEnv(env);
&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
}
</computeroutput></literallayout> </para>
</section>
</section>
</section>
